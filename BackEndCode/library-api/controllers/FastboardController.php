<?php
namespace app\controllers;

use Yii;
use Datetime;
use Yii\helpers\ArrayHelper;
use yii\base\Model;
use app\models\Gardener;
use app\models\Fastboard;
use yii\filters\AccessRule;
use yii\rest\ActiveController;
use app\models\Reportrecord;

use yii\filters\auth\QueryParamAuth; //new add

class FastboardController extends ActiveController
{
    public $modelClass = 'app\models\Fastboard';

    public function actions()
    {
        $action = parent::actions(); // TODO: Change the autogenerated stub
        unset($action['index']);
        unset($action['create']);
        unset($action['update']);
        unset($action['delete']);
        return $action;
    }

    public function actionCreate() //POST
    {
        $request = Yii::$app->request;
        $post = $request->post();
        return Fastboard::find()->where($post)->all();
    }

    public function actionIndex() //GET
    {
        return Fastboard::find()->all();
    }

    public function init()
    {
        parent::init();
        Yii::$app->user->enableSession = false;
    }

    public function actionCreateRoom()  //假如是post请求
    {
        $fastboard = new Fastboard();

        $post = file_get_contents('php://input');//获取请求体
        $post =  json_decode($post, true);//解析成数组

        $sdkToken = file_get_contents('/Users/Minna/library-api/library-api/library-api/sdkToken.txt');
        $appIdentifier = file_get_contents('/Users/Minna/library-api/library-api/library-api/AppIdentifier.txt');

        $region = $post['region'];

        $options = [
            'headers' => [
                'token' => $sdkToken,
                'Content-Type' => 'application/json', //回傳json格式
                'region' => $region,
            ],
            'json' => [
                'isRecord' => false, //不可錄製，查到說錄製要花錢
            ],
        ];
        $options2 = [
            'headers' => [
                'token' => $sdkToken,
                'Content-Type' => 'application/json', //回傳json格式
                'region' => $region,
            ],
            'json' => [
                "lifespan" => 0, // roomToken時效  (要去server改)
                "role" => "admin",
            ],
        ];

        // 呼叫第三方 API
        $client = new \GuzzleHttp\Client();
        $response = $client->request('POST', 'https://api.netless.link/v5/rooms', $options);

        // 取得 API 回應的內容字串 (JSON 格式)
        $responseBody = $response->getBody()->getContents();

        // 將 JSON 格式的回應轉換成 PHP 陣列
        $responseData = json_decode($responseBody, true);

        // 檢查是否成功取得 uuid 的值
        if (isset($responseData['uuid'])) {
            $uuid = $responseData['uuid'];

            // 接下來，您可以將 $uuid 用於第二個呼叫的 URL 中
            $response2 = $client->request('POST', 'https://api.netless.link/v5/tokens/rooms/' . $uuid, $options2);

            // 取得回應的 JSON 值
            $responseData2 = json_decode($response2->getBody(), true);

            $fastboard->uuid = $responseData['uuid'];
            $fastboard->teamUUID = $responseData['teamUUID'];
            $fastboard->appUUID = $responseData['appUUID'];
            // $fastboard->createdAt = $responseData['createdAt'];

            // 原本的日期時間格式
            $createdAt = $responseData['createdAt'];
            // 將日期時間轉換為 DateTime 物件
            $dateTime = new DateTime($createdAt);
            // 將日期時間格式轉換為 MySQL 所接受的格式
            $formattedDateTime = $dateTime->format('Y-m-d H:i:s');

            $fastboard->createdAt = $formattedDateTime;

            //存資料進資料庫
            $fastboard->saveData();

            // 回傳 JSON 給前端
            return [[
                // $fastboard->saveData(),
                "roomData" => $responseData,
                "roomToken" => $responseData2,
                "appIdentifier" => $appIdentifier,
            ]];
        } else{
            return "Failed to get data";
        }
    }
}